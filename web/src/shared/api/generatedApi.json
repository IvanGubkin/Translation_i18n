{
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RefreshTokenDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LogoutDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/auth/health": {
      "get": {
        "operationId": "AuthController_health",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/user": {
      "post": {
        "operationId": "UserController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/user/profile": {
      "get": {
        "operationId": "UserController_getProfile",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_getUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      },
      "put": {
        "operationId": "UserController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/user/{id}/password": {
      "put": {
        "operationId": "UserController_updateUserPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["User"]
      }
    },
    "/projects": {
      "get": {
        "operationId": "ProjectsController_getProjects",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Номер страницы для пагинации",
            "schema": { "minimum": 1, "example": 1, "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Количество проектов на странице",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Поисковый запрос для фильтрации проектов по названию или описанию",
            "schema": { "example": "project", "type": "string" }
          },
          {
            "name": "isVerified",
            "required": false,
            "in": "query",
            "description": "Фильтр по статусу верификации проекта",
            "schema": { "example": true, "type": "boolean" }
          },
          {
            "name": "isBlocked",
            "required": false,
            "in": "query",
            "description": "Фильтр по статусу блокировки проекта",
            "schema": { "example": false, "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "Список проектов успешно получен",
            "schema": {
              "example": {
                "data": [
                  {
                    "id": "ca2b82f0-e49c-42ad-a105-b76043ea425b",
                    "name": "Мой проект",
                    "description": "Описание моего проекта",
                    "createdAt": "2024-01-15T10:30:00.000Z",
                    "updatedAt": "2024-01-15T10:30:00.000Z",
                    "isVerified": false,
                    "isBlocked": false
                  }
                ],
                "total": 25,
                "page": 1,
                "limit": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsListResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Projects"]
      },
      "post": {
        "operationId": "ProjectsController_createProject",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProjectDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Проект успешно создан",
            "schema": {
              "example": {
                "id": "ca2b82f0-e49c-42ad-a105-b76043ea425b",
                "name": "Мой проект",
                "description": "Описание моего проекта",
                "createdAt": "2024-01-15T10:30:00.000Z",
                "updatedAt": "2024-01-15T10:30:00.000Z",
                "isVerified": false,
                "isBlocked": false
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Projects"]
      }
    },
    "/projects/user/{userId}": {
      "get": {
        "operationId": "ProjectsController_getProjectsByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID пользователя",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Номер страницы для пагинации",
            "schema": { "minimum": 1, "example": 1, "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Количество проектов на странице",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Поисковый запрос для фильтрации проектов по названию или описанию",
            "schema": { "example": "project", "type": "string" }
          },
          {
            "name": "isVerified",
            "required": false,
            "in": "query",
            "description": "Фильтр по статусу верификации проекта",
            "schema": { "example": true, "type": "boolean" }
          },
          {
            "name": "isBlocked",
            "required": false,
            "in": "query",
            "description": "Фильтр по статусу блокировки проекта",
            "schema": { "example": false, "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "Список проектов пользователя успешно получен",
            "schema": {
              "example": {
                "data": [
                  {
                    "id": "ca2b82f0-e49c-42ad-a105-b76043ea425b",
                    "name": "Мой проект",
                    "description": "Описание моего проекта",
                    "createdAt": "2024-01-15T10:30:00.000Z",
                    "updatedAt": "2024-01-15T10:30:00.000Z",
                    "isVerified": false,
                    "isBlocked": false
                  }
                ],
                "total": 5,
                "page": 1,
                "limit": 10
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsListResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Projects"]
      }
    },
    "/projects/{id}": {
      "delete": {
        "operationId": "ProjectsController_deleteProject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID проекта",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Проект успешно удален",
            "schema": {
              "example": { "message": "Project deleted successfully" }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectResponseDto"
                }
              }
            }
          },
          "404": { "description": "Проект не найден" }
        },
        "tags": ["Projects"]
      }
    },
    "/sub-projects": {
      "get": {
        "operationId": "SubProjectsController_getSubProjectsAll",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "description": "Идентификатор проекта",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "Название подпроекта",
            "schema": { "example": "SubProject", "type": "number" }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "description": "Поисковый запрос",
            "schema": { "example": "SubProject", "type": "string" }
          },
          {
            "description": "Идентификатор проекта",
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "number"
            }
          },
          {
            "description": "Название подпроекта",
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "example": "SubProject", "type": "number" }
          },
          {
            "description": "Поисковый запрос",
            "name": "search",
            "in": "query",
            "required": true,
            "schema": { "example": "SubProject", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/SubProjectDto" }
                }
              }
            }
          }
        },
        "summary": "Получить все подпроекты",
        "tags": ["SubProjects"]
      },
      "post": {
        "operationId": "SubProjectsController_createSubProject",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubProjects" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["SubProjects"]
      }
    },
    "/sub-projects/{id}": {
      "get": {
        "operationId": "SubProjectsController_getSubProjectsByProjectId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["SubProjects"]
      },
      "put": {
        "operationId": "SubProjectsController_updateSubProject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubProjects" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["SubProjects"]
      },
      "delete": {
        "operationId": "SubProjectsController_deleteSubProject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["SubProjects"]
      }
    },
    "/translations": {
      "get": {
        "operationId": "TranslationsController_getTranslationsAll",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Translations"]
      },
      "post": {
        "operationId": "TranslationsController_createTranslation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Translations" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Translations"]
      }
    },
    "/translations/{id}": {
      "get": {
        "operationId": "TranslationsController_getTranslationsBySubProjectId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Translations"]
      },
      "put": {
        "operationId": "TranslationsController_updateTranslation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Translations" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Translations"]
      },
      "delete": {
        "operationId": "TranslationsController_deleteTranslation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Translations"]
      }
    },
    "/translations/{id}/verified": {
      "put": {
        "operationId": "TranslationsController_changeVerified",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "boolean" } } }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Translations"]
      }
    }
  },
  "info": {
    "title": "Translation API",
    "description": "The translation API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "RegisterDto": { "type": "object", "properties": {} },
      "LoginDto": { "type": "object", "properties": {} },
      "RefreshTokenDto": { "type": "object", "properties": {} },
      "LogoutDto": { "type": "object", "properties": {} },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "email": { "type": "string", "description": "Email of the user" },
          "password": {
            "type": "string",
            "description": "Password of the user"
          }
        },
        "required": ["lastName", "firstName", "email", "password"]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор пользователя",
            "example": "ca2b82f0-e49c-42ad-a105-b76043ea425b"
          },
          "firstName": {
            "type": "string",
            "description": "Имя пользователя",
            "example": "Иван"
          },
          "lastName": {
            "type": "string",
            "description": "Фамилия пользователя",
            "example": "Иванов"
          }
        },
        "required": ["id", "firstName", "lastName"]
      },
      "ProjectResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор проекта",
            "example": "ca2b82f0-e49c-42ad-a105-b76043ea425b"
          },
          "name": {
            "type": "string",
            "description": "Название проекта",
            "example": "Мой проект"
          },
          "description": {
            "type": "string",
            "description": "Описание проекта",
            "example": "Описание моего проекта"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Дата создания проекта",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Дата последнего обновления проекта",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "isVerified": {
            "type": "boolean",
            "description": "Статус верификации проекта",
            "example": false
          },
          "isBlocked": {
            "type": "boolean",
            "description": "Статус блокировки проекта",
            "example": false
          },
          "user": {
            "description": "Информация о пользователе",
            "allOf": [{ "$ref": "#/components/schemas/UserResponseDto" }]
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "createdAt",
          "updatedAt",
          "isVerified",
          "isBlocked",
          "user"
        ]
      },
      "ProjectsListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Массив проектов",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectResponseDto" }
          },
          "total": {
            "type": "number",
            "description": "Общее количество проектов",
            "example": 25
          },
          "page": {
            "type": "number",
            "description": "Текущая страница",
            "example": 1
          },
          "limit": {
            "type": "number",
            "description": "Количество проектов на странице",
            "example": 10
          }
        },
        "required": ["data", "total", "page", "limit"]
      },
      "CreateProjectDto": { "type": "object", "properties": {} },
      "CreateProjectResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор созданного проекта",
            "example": "ca2b82f0-e49c-42ad-a105-b76043ea425b"
          },
          "name": {
            "type": "string",
            "description": "Название проекта",
            "example": "Мой проект"
          },
          "description": {
            "type": "string",
            "description": "Описание проекта",
            "example": "Описание моего проекта"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Дата создания проекта",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Дата последнего обновления проекта",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "isVerified": {
            "type": "boolean",
            "description": "Статус верификации проекта",
            "example": false
          },
          "isBlocked": {
            "type": "boolean",
            "description": "Статус блокировки проекта",
            "example": false
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "createdAt",
          "updatedAt",
          "isVerified",
          "isBlocked"
        ]
      },
      "DeleteProjectResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Сообщение об успешном удалении",
            "example": "Project deleted successfully"
          }
        },
        "required": ["message"]
      },
      "SubProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор подпроекта",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "Название подпроекта",
            "example": "SubProject"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Дата создания подпроекта",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Дата последнего обновления подпроекта",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "projectId": {
            "type": "string",
            "description": "Идентификатор проекта",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "translationsCount": {
            "type": "number",
            "description": "Количество переводов",
            "example": 10
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt",
          "projectId",
          "translationsCount"
        ]
      },
      "SubProjects": { "type": "object", "properties": {} },
      "Translations": { "type": "object", "properties": {} }
    }
  }
}
