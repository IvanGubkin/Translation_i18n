/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsPostIdRouteImport } from './routes/projects_.$postId'
import { Route as ProjectsPostIdEditRouteImport } from './routes/projects_.$postId.edit'

const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsPostIdRoute = ProjectsPostIdRouteImport.update({
  id: '/projects_/$postId',
  path: '/projects/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsPostIdEditRoute = ProjectsPostIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => ProjectsPostIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsRoute
  '/projects/$postId': typeof ProjectsPostIdRouteWithChildren
  '/projects/$postId/edit': typeof ProjectsPostIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsRoute
  '/projects/$postId': typeof ProjectsPostIdRouteWithChildren
  '/projects/$postId/edit': typeof ProjectsPostIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/projects': typeof ProjectsRoute
  '/projects_/$postId': typeof ProjectsPostIdRouteWithChildren
  '/projects_/$postId/edit': typeof ProjectsPostIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/projects' | '/projects/$postId' | '/projects/$postId/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/projects' | '/projects/$postId' | '/projects/$postId/edit'
  id:
    | '__root__'
    | '/'
    | '/projects'
    | '/projects_/$postId'
    | '/projects_/$postId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectsRoute: typeof ProjectsRoute
  ProjectsPostIdRoute: typeof ProjectsPostIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects_/$postId': {
      id: '/projects_/$postId'
      path: '/projects/$postId'
      fullPath: '/projects/$postId'
      preLoaderRoute: typeof ProjectsPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects_/$postId/edit': {
      id: '/projects_/$postId/edit'
      path: '/edit'
      fullPath: '/projects/$postId/edit'
      preLoaderRoute: typeof ProjectsPostIdEditRouteImport
      parentRoute: typeof ProjectsPostIdRoute
    }
  }
}

interface ProjectsPostIdRouteChildren {
  ProjectsPostIdEditRoute: typeof ProjectsPostIdEditRoute
}

const ProjectsPostIdRouteChildren: ProjectsPostIdRouteChildren = {
  ProjectsPostIdEditRoute: ProjectsPostIdEditRoute,
}

const ProjectsPostIdRouteWithChildren = ProjectsPostIdRoute._addFileChildren(
  ProjectsPostIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectsRoute: ProjectsRoute,
  ProjectsPostIdRoute: ProjectsPostIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
