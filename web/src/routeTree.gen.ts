/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as ProjectsIdProjectRouteImport } from './routes/projects/$idProject'
import { Route as ProjectsIdProjectEditRouteImport } from './routes/projects/$idProject.edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIdProjectRoute = ProjectsIdProjectRouteImport.update({
  id: '/projects/$idProject',
  path: '/projects/$idProject',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIdProjectEditRoute = ProjectsIdProjectEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => ProjectsIdProjectRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects/$idProject': typeof ProjectsIdProjectRouteWithChildren
  '/projects': typeof ProjectsIndexRoute
  '/projects/$idProject/edit': typeof ProjectsIdProjectEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects/$idProject': typeof ProjectsIdProjectRouteWithChildren
  '/projects': typeof ProjectsIndexRoute
  '/projects/$idProject/edit': typeof ProjectsIdProjectEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/projects/$idProject': typeof ProjectsIdProjectRouteWithChildren
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$idProject/edit': typeof ProjectsIdProjectEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/projects/$idProject'
    | '/projects'
    | '/projects/$idProject/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/projects/$idProject' | '/projects' | '/projects/$idProject/edit'
  id:
    | '__root__'
    | '/'
    | '/projects/$idProject'
    | '/projects/'
    | '/projects/$idProject/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectsIdProjectRoute: typeof ProjectsIdProjectRouteWithChildren
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$idProject': {
      id: '/projects/$idProject'
      path: '/projects/$idProject'
      fullPath: '/projects/$idProject'
      preLoaderRoute: typeof ProjectsIdProjectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$idProject/edit': {
      id: '/projects/$idProject/edit'
      path: '/edit'
      fullPath: '/projects/$idProject/edit'
      preLoaderRoute: typeof ProjectsIdProjectEditRouteImport
      parentRoute: typeof ProjectsIdProjectRoute
    }
  }
}

interface ProjectsIdProjectRouteChildren {
  ProjectsIdProjectEditRoute: typeof ProjectsIdProjectEditRoute
}

const ProjectsIdProjectRouteChildren: ProjectsIdProjectRouteChildren = {
  ProjectsIdProjectEditRoute: ProjectsIdProjectEditRoute,
}

const ProjectsIdProjectRouteWithChildren =
  ProjectsIdProjectRoute._addFileChildren(ProjectsIdProjectRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectsIdProjectRoute: ProjectsIdProjectRouteWithChildren,
  ProjectsIndexRoute: ProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
